/*namespace Test {
	bool depositTest(int amount);
	bool withdrawTest(int amount);
	bool depositWithdrawTest(int amount);
}

namespace Test {
	bool depositTest(int amount) {
		Bank bank;
		processes ps;
		for (int i : range(0, amount)) {
			ps += [&bank] { bank.deposit(1); };
		}
		std::cout << "Balance 1 is " << bank.getBalance() << std::endl;
		if(bank.getBalance() == amount) {
			alang::logl("Pass 1");
		}
		return bank.getBalance() == amount;
	}

	bool withdrawTest(int amount) {
		Bank bank;
		bank.deposit(amount);
		processes ps;
		for (int i : range(0, amount)) {
			ps += [&bank] { bank.withdraw(1); };
		}
		std::cout << "Balance 2 is " << bank.getBalance() << std::endl;
		if(bank.getBalance() == 0) {
			alang::logl("Pass 2");
		}
		return bank.getBalance() == 0;
	}

	bool depositWithdrawTest(int amount) {
		Bank bank;
		processes ps;
		for (int i : range(0, amount)) {
			ps += [&bank] { bank.withdraw(1); };
			ps += [&bank] { bank.deposit(1); };
		}
		std::cout << "Balance 3 is " << bank.getBalance() << std::endl;
		if(bank.getBalance() == 0) {
			alang::logl("Pass 3");
		}
		return bank.getBalance() == 0;
	}
}

int main(void) {
	const int N = 10000;

	Test::depositTest(N);
	Test::withdrawTest(N);
	Test::depositWithdrawTest(N);

	alang::logl("Tests passed");
}*/
